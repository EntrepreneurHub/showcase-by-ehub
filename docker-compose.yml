services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: showcase_frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=/api
      - NEXT_PUBLIC_AUTH_COOKIE_NAME=accessToken
      - NEXT_PUBLIC_REFRESH_TOKEN_NAME=refreshToken
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: showcase_backend
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=development
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=showcase_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=your_password
      - JWT_SECRET=your_jwt_secret_key
      - JWT_EXPIRES_IN=24h
      - JWT_REFRESH_SECRET=your_refresh_secret_key
      - JWT_REFRESH_EXPIRES_IN=7d
      - ALLOWED_ORIGINS=http://localhost:3000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules

  postgres:
    image: postgres:16-alpine
    container_name: showcase_postgres
    environment:
      POSTGRES_DB: showcase_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: your_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema:/docker-entrypoint-initdb.d
      - ./database/seeds:/seeds
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: 